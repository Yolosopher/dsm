- const title = 'Compare'
- const loggedin = false
- const pagenavoff = "Comaparison"
-
	const getRandomMilligram = () => {
		let randomnum = Math.random()
		if (randomnum < .255) {
			return ".5 ML"
		} else if (randomnum < .555) {
			return "1 ML"
		} else if (randomnum < .755) {
			return "3 ML"
		} else {
			return "5 ML"
		}
	}
-
	const getRandomBool = () => {
		let randomnum = Math.random()
		if (randomnum < .5) {
			return 'true'
		} else {
			return 'false'
		}
	}
-
	const getRndInteger = (min, max) => {
		return Math.floor(Math.random() * (max - min) ) + min;
	}
-
	const getRandomColor = () => {
		return `rgba(${getRndInteger(0, 255)}, ${getRndInteger(0, 255)}, ${getRndInteger(0, 255)})`
	}
doctype html
html(lang="en")
	head
		link(rel="stylesheet" href="assets/css/swiper-bundle.min.css")
		include ../layouts/_head

	body 
		include ../layouts/_header
		include ../layouts/_loginmodal
		include ../layouts/_pagenav

		main.main.comparemain.container
			.comparemain__content
				table.comparemain__table
					thead
						tr.heading
							td
							each slide, index in slides
								td
									a.td_item.td_image(href="productin.html", draggable="false") 
										img(src=slide.image, alt="", draggable="false")
									h2
										a(href="productin.html", draggable="false")=slide.title
									.homemain__sales__item__bagNprice.addinbasketbtn(data-id=slide.id)
										.addtobag
											include ../components/bag
											.flip
												span.add add to bag
												span.remove remove
										.homemain__sales__item__prices
											.homemain__sales__item__price.discount
												span=slide.price
												|  USD
											.homemain__sales__item__price.current
												span=slide.price
												|  USD
					tbody
						tr
							td brand
							each slide, index in slides
								td
									.td_item=slide.category
						tr
							td milligrams
							each slide, index in slides
								td
									.td_item=getRandomMilligram()
						tr
							td color
							each slide, index in slides
								td
									.td_item(data-color="true", style=`--color: ${getRandomColor()};`)
						tr
							td.td_break(colspan="0") ingredients
							
						tr
							td argan oil
							each slide, index in slides
								td
									.td_item.td_ingr(data-value=getRandomBool())

						tr
							td red sea herb
							each slide, index in slides
								td
									.td_item.td_ingr(data-value=getRandomBool())

						tr
							td dead sea salt
							each slide, index in slides
								td
									.td_item.td_ingr(data-value=getRandomBool())
			button.clearcomparison.yellowbtn(type="button") clear comparison




		script.
			//- const ele = document.querySelector('.comparemain__content')
			function setTdBreak () {
				let lngth = [...document.querySelector('tbody tr').querySelectorAll('td')].length;
				//- console.log
				document.querySelector('.td_break').setAttribute('colspan', lngth)
			};
			setTdBreak();
			document.addEventListener('DOMContentLoaded', function () {
				const ele = document.querySelector('.comparemain__content');
				ele.style.cursor = 'grab';

				let pos = { top: 0, left: 0, x: 0, y: 0 };

				const mouseDownHandler = function (e) {
					ele.style.cursor = 'grabbing';
					ele.style.userSelect = 'none';

					pos = {
						left: ele.scrollLeft,
						top: ele.scrollTop,
						// Get the current mouse position
						x: e.clientX,
						y: e.clientY,
					};

					document.addEventListener('mousemove', mouseMoveHandler);
					document.addEventListener('mouseup', mouseUpHandler);
				};

				const mouseMoveHandler = function (e) {
					// How far the mouse has been moved
					const dx = e.clientX - pos.x;
					const dy = e.clientY - pos.y;

					// Scroll the element
					ele.scrollTop = pos.top - dy;
					ele.scrollLeft = pos.left - dx;
				};

				const mouseUpHandler = function () {
					ele.style.cursor = 'grab';
					ele.style.removeProperty('user-select');

					document.removeEventListener('mousemove', mouseMoveHandler);
					document.removeEventListener('mouseup', mouseUpHandler);
				};

				// Attach the handler
				ele.addEventListener('mousedown', mouseDownHandler);
			});

		include ../layouts/_basket
		include ../layouts/_footer

		include ../layouts/_respomenu

		include ../layouts/_scripts